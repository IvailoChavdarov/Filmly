@model SearchResultVM
@section heads{
    <link href="@Url.Content("~/css/Shared/breadcrumb.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/css/Shared/customSelect.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/css/Titles/search.css")" rel="stylesheet" type="text/css" />
}
<partial name="_breadcrumbPartial" />
<div class="container search-container">
    <form asp-controller="titles" asp-action="search" method="get" class="search-form">
        <div class="form-group">

            @*<input type="search" name="search" placeholder="Search" aria-label="Search">*@
            <div class="custom-select">
                <select name="type">
                    <option value="all">All</option>
                    <option value="all">All</option>
                    <option value="movies">Movies</option>
                    <option value="series">TV series</option>
                    <option value="keywords">Keywords</option>
                    <option value="actors">Actors</option>
                </select>
            </div>
            <label class="form-label" for="search">Search with IMDb-API</label>
            <input type="search" name="search" aria-label="Search" class="form-input">
            <button type="submit" aria-label="search" class="search-button"><i class="fas fa-search fa-lg"></i></button>
        </div>
    </form>
    <div class="search-results">
        @if (Model.Expression != null)
        {
            ViewData["Title"] = $"Results for {Model.Expression}";
            @if (Model.Results.Length == 0)
            {
                <p>
                    No results for @Model.Expression
                </p>
            }
            else
            {
                <h1>Results for @Model.Expression</h1>
                <ul>
                    @foreach (var result in Model.ResultsWithImage)
                    {
                        <li>
                            <a asp-controller="titles" asp-action="details" asp-route-id="@result.Id">
                                <img src="@result.Image" alt="@result.Title" width="80" height="110" />
                                <h3>
                                    @result.Title
                                    @if (!string.IsNullOrEmpty(result.Description))
                                    {
                                        <span>@result.Description</span>
                                    }
                                    @*@if (result.ResultType!="Title")
                                    {
                                        <span class="text-danger">(@result.ResultType)</span>
                                    }*@
                                </h3>

                            </a>
                        </li>
                    }
                </ul>
                @if (Model.ResultsWithoutImage.Length != 0)
                {
                    <h4 id="noImageResultsToggler">- Results with no image are hidden, click here to see all</h4>
                    <ul id="results-noImage">
                        @foreach (var result in Model.ResultsWithoutImage)
                        {
                            <li>
                                <a asp-controller="titles" asp-action="details" asp-route-id="@result.Id">
                                    <img src="@result.Image" alt="@result.Title" width="80" height="110" />
                                    <h3>
                                        @result.Title
                                        @if (!string.IsNullOrEmpty(result.Description))
                                        {
                                            <span>@result.Description</span>
                                        }
                                    </h3>

                                </a>
                            </li>
                        }
                    </ul>
                }

            }

        }
        else
        {
            <p>Enter what you want and press <i class="fas fa-search fa-sm"></i> to search for it</p>
            ViewData["Title"] = "Search";
        }
    </div>
</div>
@section scripts{
    <script>
        if (document.getElementById("noImageResultsToggler")) {
            document.getElementById("noImageResultsToggler").addEventListener('click', () => {
                document.getElementById("results-noImage").classList.add("shown");
                document.getElementById("noImageResultsToggler").style.display = "none";
            })
        }

    </script>
                <script>
                    $('input').focus(function () {
                        $(this).parents('.form-group').addClass('focused');
                    });

                    $('input').blur(function () {
                        var inputValue = $(this).val();
                        if (inputValue == "") {
                            $(this).parents('.form-group').removeClass('filled');
                            $(this).parents('.form-group').removeClass('focused');
                        } else {
                            $(this).parents('.form-group').addClass('filled');
                        }
                    })
                </script>
                <script>
                    var x, i, j, l, ll, selElmnt, a, b, c;
                    /* Look for any elements with the class "custom-select": */
                    x = document.getElementsByClassName("custom-select");
                    l = x.length;
                    for (i = 0; i < l; i++) {
                        selElmnt = x[i].getElementsByTagName("select")[0];
                        ll = selElmnt.length;
                        /* For each element, create a new DIV that will act as the selected item: */
                        a = document.createElement("DIV");
                        a.setAttribute("class", "select-selected");
                        a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
                        x[i].appendChild(a);
                        /* For each element, create a new DIV that will contain the option list: */
                        b = document.createElement("DIV");
                        b.setAttribute("class", "select-items select-hide");
                        for (j = 1; j < ll; j++) {
                            /* For each option in the original select element,
                            create a new DIV that will act as an option item: */
                            c = document.createElement("DIV");
                            c.innerHTML = selElmnt.options[j].innerHTML;
                            c.addEventListener("click", function (e) {
                                /* When an item is clicked, update the original select box,
                                and the selected item: */
                                var y, i, k, s, h, sl, yl;
                                s = this.parentNode.parentNode.getElementsByTagName("select")[0];
                                sl = s.length;
                                h = this.parentNode.previousSibling;
                                for (i = 0; i < sl; i++) {
                                    if (s.options[i].innerHTML == this.innerHTML) {
                                        s.selectedIndex = i;
                                        h.innerHTML = this.innerHTML;
                                        y = this.parentNode.getElementsByClassName("same-as-selected");
                                        yl = y.length;
                                        for (k = 0; k < yl; k++) {
                                            y[k].removeAttribute("class");
                                        }
                                        this.setAttribute("class", "same-as-selected");
                                        break;
                                    }
                                }
                                h.click();
                            });
                            b.appendChild(c);
                        }
                        x[i].appendChild(b);
                        a.addEventListener("click", function (e) {
                            /* When the select box is clicked, close any other select boxes,
                            and open/close the current select box: */
                            e.stopPropagation();
                            closeAllSelect(this);
                            this.nextSibling.classList.toggle("select-hide");
                            this.classList.toggle("select-arrow-active");
                        });
                    }

                    function closeAllSelect(elmnt) {
                        /* A function that will close all select boxes in the document,
                        except the current select box: */
                        var x, y, i, xl, yl, arrNo = [];
                        x = document.getElementsByClassName("select-items");
                        y = document.getElementsByClassName("select-selected");
                        xl = x.length;
                        yl = y.length;
                        for (i = 0; i < yl; i++) {
                            if (elmnt == y[i]) {
                                arrNo.push(i)
                            } else {
                                y[i].classList.remove("select-arrow-active");
                            }
                        }
                        for (i = 0; i < xl; i++) {
                            if (arrNo.indexOf(i)) {
                                x[i].classList.add("select-hide");
                            }
                        }
                    }

                    /* If the user clicks anywhere outside the select box,
                    then close all select boxes: */
                    document.addEventListener("click", closeAllSelect);
                </script>
            }