@model TitleDetailsVM
@{
    ViewData["Title"] = $"{Model.TitleFullData.TitleName}";
}
@section heads{
    <link href="@Url.Content("~/css/Shared/breadcrumb.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/css/Titles/details.css")" rel="stylesheet" type="text/css" />
}

<partial name="_breadcrumbPartial" />
<div class="title-details-container">
    <div class="userCollections-buttons">
        @if (!Model.InUserFavourites)
        {
            <form asp-controller="Titles" asp-action="AddTo" asp-route-id="@Model.TitleFullData.IdInApi" asp-route-title="@Model.TitleFullData.TitleName" asp-route-collection="favourites" class="bg-favourites">
                <button type="submit" aria-label="Add to favourites"><i class="far fa-heart"></i><span class="userCollections-button-text">Add to your favorites</span></button>
            </form>
        }
        else
        {
            <form asp-controller="Titles" asp-action="RemoveFrom" asp-route-id="@Model.TitleFullData.IdInApi" asp-route-title="@Model.TitleFullData.TitleName" asp-route-collection="favourites" class="bg-favourites">
                <button type="submit" aria-label="Remove from favourites"><i class="fas fa-heart"></i><span class="userCollections-button-text">Remove from your favorites</span></button>
            </form>
        }
        @if (!Model.InUserWatchList)
        {
            @*<a asp-action="AddTo" asp-route-collection="watchlist" asp-route-Movieid="@Model.TitleFullData.IdInApi" asp-route-Title="@Model.TitleFullData.FullTitle" asp-route-Image="@Model.TitleFullData.Image">ADD TO WATCHLIST</a>*@
            <form asp-controller="Titles" asp-action="AddTo" asp-route-id="@Model.TitleFullData.IdInApi" asp-route-title="@Model.TitleFullData.TitleName" asp-route-collection="watchlist" class="bg-watchlist">
                <button type="submit" aria-label="Add to watchList"><i class="far fa-bookmark"></i><span class="userCollections-button-text">Add to your watchlist</span></button>
            </form>

        }
        else
        {
            <form asp-controller="Titles" asp-action="RemoveFrom" asp-route-id="@Model.TitleFullData.IdInApi" asp-route-title="@Model.TitleFullData.TitleName" asp-route-collection="watchlist" class="bg-watchlist">
                <button type="submit" aria-label="Remove from watchlist"><i class="fas fa-bookmark"></i><span class="userCollections-button-text">Remove from your watchlist</span></button>
            </form>
        }
        <button type="button" class="NoLoader bg-share" data-toggle="modal" aria-label="Share title" data-target="#shareModal">
            <i class="fas fa-share-alt"></i><span class="userCollections-button-text">Share</span>
        </button>
        @if (!string.IsNullOrEmpty(Model.TitleFullData.TrailerLinkEmbed))
        {
            <button type="button" class="NoLoader bg-trailer" data-toggle="modal" aria-label="Title trailer" data-target="#trailerModal">
                <i class="fas fa-play-circle"></i><span class="userCollections-button-text">Trailer</span>
            </button>
        }

        <a href="@Model.IMDbURL" target="_blank" class="NoLoader bg-imdb" aria-label="Title in IMDb"><i class="fab fa-imdb"></i><span class="userCollections-button-text">Check on IMDb</span></a>

    </div>
    <section class="title-header">

        <img src="@Model.TitleFullData.Image" alt="@Model.TitleFullData.OriginalTitle" width="178" height="267" id="titleImage" />

        <div class="title-mainData">
            <h1>
                <span class="rating-wrap"><i class="fas fa-star title-rating-icon"></i><span class="title-rating">@($"{decimal.Parse(Model.TitleFullData.IMDbRating)}")</span></span>@Model.TitleFullData.FullTitle
                @if (Model.TitleFullData.OriginalTitle != Model.TitleFullData.TitleName && Model.TitleFullData.OriginalTitle != Model.TitleFullData.FullTitle && !string.IsNullOrEmpty(Model.TitleFullData.OriginalTitle))
                {
                    <span class="other-title">Also known as @Model.TitleFullData.OriginalTitle</span>
                }
            </h1>

            <h2>
                <i class="fas fa-info-circle fa-lg"></i>@Model.TitleFullData.ContentRating <span class="title-info-separator">|</span> @Model.TitleFullData.Year <span class="title-info-separator">|</span> @Model.TitleFullData.Genres
                @if (!string.IsNullOrEmpty(Model.TitleFullData.RuntimeStr))
                {
                    <span><span class="title-info-separator">|</span>@Model.TitleFullData.RuntimeStr</span>
                }
            </h2>
            <h2>
                @if (string.IsNullOrEmpty(Model.TitleFullData.Awards))
                {
                    <span>No awards yet :(</span>
                }
                else
                {
                    <span>
                        <i class="fas fa-award fa-lg"></i>
                        @for (int i = 0; i < Model.Awards.Length; i++)
                        {
                            <span>@Model.Awards[i]</span>
                            if (i != Model.Awards.Length - 1)
                            {
                                <span class="title-info-separator">|</span>
                            }
                        }
                    </span>
                }
            </h2>
            @if (!string.IsNullOrEmpty(Model.TitleFullData.Tagline))
            {
                <h2>
                    <i class="fas fa-tag"></i><b>Tagline:</b> "@Model.TitleFullData.Tagline"
                </h2>
            }
            <h2>
                @if (!string.IsNullOrEmpty(Model.TitleFullData.Stars))
                {
                    <span class="title-stars">
                        <i class="fas fa-user-tie fa-lg"></i>
                        @for (int i = 0; i < Model.StarsNames.Length; i++)
                        {
                            <span>@Model.StarsNames[i]</span>
                            if (i != Model.StarsNames.Length - 1)
                            {<span class="title-info-separator">|</span>
                            }
                        }
                    </span>
                    <a asp-controller="titles" asp-action="cast" asp-route-id="@Model.TitleFullData.IdInApi" aria-label="See full crew" class="title-seeCastButton hiddenOnMobile">See the whole cast and crew</a><a asp-controller="titles" asp-action="cast" asp-route-id="@Model.TitleFullData.IdInApi" aria-label="See full crew" class="title-seeCastButton mobile-view"><i class="fas fa-angle-right"></i></a>
                }
            </h2>
            <p>@Model.TitleFullData.Plot</p>
            @if (!string.IsNullOrEmpty(Model.TitleFullData.ReleaseDate))
            {
                <p class="title-releaseDate"><i class="fas fa-calendar-alt"></i> Released: @NameSimplifiers.ReadDate(Model.TitleFullData.ReleaseDate)</p>
            }
            else if (!string.IsNullOrEmpty(Model.TitleFullData.Year))
            {
                <p class="title-releaseDate"><i class="fas fa-calendar-alt"></i>Year released: @Model.TitleFullData.Year</p>
            }
        </div>
    </section>


    @*trailer modal*@
    @if (!string.IsNullOrEmpty(Model.TitleFullData.TrailerLinkEmbed))
    {
        <div class="modal fade" id="trailerModal" tabindex="-1" role="dialog" aria-labelledby="titleTrailerModal" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content trailerContainer">
                    <iframe class="trailerEmbed" name="trailerIframe" width="854" height="937" src="@Model.TitleFullData.TrailerLinkEmbed" allowfullscreen="true"  mozallowfullscreen="true" webkitallowfullscreen="true"></iframe>
                </div>
            </div>
        </div>
    }
    @*share modal*@
    <div class="modal fade" id="shareModal" tabindex="-1" role="dialog" aria-labelledby="shareTitleModal" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content shareContainer">
                <img src="" height="300" width="300" alt="QRCODE" id="title-qr-code" title="Scan to get" />
                <p>
                    <span class="h3">@Model.TitleFullData.TitleName - Filmly</span>
                    URL: <button class="NoLoader" name="copyTitleURL" id="copyTitleURLButton" aria-label="copy url" title="Copy" onclick="copyToClipboard(window.location.href)"></button>
                    <a href="" id="QR-download-button" class="NoLoader" download="download">Download QR code</a>
                </p>


            </div>
            
        </div>
    </div>


    <div class="title-details-mainContent">

        <div class="stars-data">
            <h1><a asp-controller="titles" asp-action="cast" asp-route-id="@Model.TitleFullData.IdInApi" class="topic-separator">Top crew</a></h1>
            <p class="crew-info"><i class="fas fa-user-tie"></i><b>Stars:</b></p>
            @foreach (var actor in Model.Stars)
            {
                <div class="flex-col">
                    <a asp-controller="titles" asp-action="details" asp-route-id="@actor.IdInAPI" class="actor-data-card">
                        <div class="card">
                            <div class="img-name">
                                <img src="@actor.Image" alt="@actor.Height">
                                <h2>@actor.Name</h2>
                            </div>
                            <p>@actor.Summary</p>
                        </div>
                    </a>
                </div>
            }
            @if (!string.IsNullOrEmpty(Model.TitleFullData.Writers) || !string.IsNullOrEmpty(Model.TitleFullData.Directors))
            {
                <div class="crew-names">
                    @if (!string.IsNullOrEmpty(Model.TitleFullData.Writers))
                    {
                        <p class="crew-info"><i class="fas fa-pen"></i><b>Writers:</b> @Model.TitleFullData.Writers</p>
                    }
                    @if (!string.IsNullOrEmpty(Model.TitleFullData.Directors))
                    {
                        <p class="crew-info"><i class="fas fa-video"></i><b>Directors:</b> @Model.TitleFullData.Directors</p>
                    }
                </div>
            }

            <a asp-controller="titles" asp-action="cast" asp-route-id="@Model.TitleFullData.IdInApi" class="redirect-button-bottom-right">See all</a>
        </div>
        <div class="rating-data">
            <h1 class="topic-separator">Rating</h1>
            <div class="row">
                <div class="col-lg-4 my-auto">
                    @**@

                    <h2>- @Model.TitleFullData.IMDbRating -</h2>
                    <div class="stars" style="--rating:@($"{double.Parse(Model.TitleFullData.IMDbRating)*10}%")">
                        @for (int i = 0; i <= 9; i++)
                        {
                            <i class="fas fa-star"></i>
                        }
                    </div>
                    <p class="comment">ON IMDB</p>
                </div>
                <div class="col-lg-4 rating-separator my-auto">out of</div>
                <div class="col-lg-4 my-auto votes-count-container"><span class="votes-count">@Model.TitleFullData.IMDbRatingVotes</span> VOTES</div>
            </div>
        </div>
        <div class="similarTitles">
            <h1 class="topic-separator">Similar</h1>
            <div id="similars-slider-scrollLeftButton" onclick="similarsSlideLeft()"><i class="fas fa-angle-left"></i></div>
            <div id="similars-slider-scrollRightButton" onclick="similarsSlideRight()"><i class="fas fa-angle-right"></i></div>
            <ul class="similars-slider">
                @foreach (var similar in Model.Similars)
                {
                    <li class="similar-card-container">
                        <div class="similar-card">
                            <img src="@similar.ImgURL" alt="@similar.IdInApi" />
                            <a asp-controller="titles" asp-action="details" asp-route-id="@similar.IdInApi" class="similar-card-content">
                                <h3>@similar.Title</h3>
                                <div class="similar-card-rating">
                                    <i class="fas fa-star"></i> @similar.IMDbRating
                                </div>
                            </a>
                        </div>
                    </li>
                }
            </ul>
        </div>
        <div class="additional-info">
            @if (!string.IsNullOrEmpty(Model.TitleFullData.Countries))
            {
                <p><i class="fas fa-globe"></i>Countries: @Model.TitleFullData.Countries</p>
            }
            @if (!string.IsNullOrEmpty(Model.TitleFullData.Languages))
            {
                <p><i class="fas fa-language"></i>Languages: @Model.TitleFullData.Languages</p>
            }
            @if (!string.IsNullOrEmpty(Model.TitleFullData.Companies))
            {
                <p><i class="fas fa-building"></i>Companies: @Model.TitleFullData.Companies</p>
            }
            @if (!string.IsNullOrEmpty(Model.TitleFullData.Keywords))
            {
                <p><i class="fas fa-key"></i>Keywords: @Model.TitleFullData.Keywords</p>
            }
            <div class="image-slider-container">
                <a asp-controller="titles" asp-action="titleimages" asp-route-id="@Model.TitleFullData.IdInApi" class="slider">
                    <div class="slide-track" id="images-slider">
                        @foreach (var image in Model.Images)
                        {
                            <div class="slide">
                                <img src="@image.ImgURL" alt="@image.Title" />
                            </div>
                        }
                        @foreach (var image in Model.Images)
                        {
                            <div class="slide">
                                <img src="@image.ImgURL" alt="@image.Title" />
                            </div>
                        }
                    </div>
                </a>
            </div>
        </div>

    </div>
</div>

@section scripts{
    <script>
        document.documentElement.style.setProperty('--slidesCount', document.getElementById("images-slider").children.length);
        document.documentElement.style.setProperty('--trailerScale', document.documentElement.clientWidth / 950);
        document.getElementById("title-qr-code").src = "https://api.qrserver.com/v1/create-qr-code/?size=300x300&data=" + window.location.href;
        document.getElementById("copyTitleURLButton").innerHTML = window.location.href;
        document.getElementById("QR-download-button").href = "https://api.qrserver.com/v1/create-qr-code/?size=300x300&data=" + window.location.href;
        //setTimeout(() => {
        //    //var cssLink = document.createElement("link");
        //    //cssLink.href = "~/css/Titles/trailer.css";
        //    //cssLink.rel = "stylesheet";
        //    //cssLink.type = "text/css";
        //    //frames['trailerIframe'].document.head.appendChild(cssLink);
        //    console.log(document.getElementById("trailerIframe").contentWindow.document);
        //})
        let isDown = false;
        let startX;
        let scrollLeft;
        const similarsSlider = document.querySelector('.similars-slider');

        const end = () => {
            isDown = false;
            similarsSlider.classList.remove('active');
        }

        const start = (e) => {
            isDown = true;
            similarsSlider.classList.add('active');
            startX = e.pageX || e.touches[0].pageX - similarsSlider.offsetLeft;
            scrollLeft = similarsSlider.scrollLeft;
        }

        const move = (e) => {
            if (!isDown) return;

            e.preventDefault();
            const x = e.pageX || e.touches[0].pageX - similarsSlider.offsetLeft;
            const dist = (x - startX);
            similarsSlider.scrollLeft = scrollLeft - dist;
            manageSliderButtonVisibility()
        }

        (() => {
            similarsSlider.addEventListener('mousedown', start);
            similarsSlider.addEventListener('touchstart', start);

            similarsSlider.addEventListener('mousemove', move);
            similarsSlider.addEventListener('touchmove', move);

            similarsSlider.addEventListener('mouseleave', end);
            similarsSlider.addEventListener('mouseup', end);
            similarsSlider.addEventListener('touchend', end);
            manageSliderButtonVisibility()
        })();
        function similarsSlideRight() {
            similarsSlider.scrollLeft += 650;
            manageSliderButtonVisibility()
        }
        function similarsSlideLeft() {
            similarsSlider.scrollLeft -= 600;
            manageSliderButtonVisibility()
        }
        function manageSliderButtonVisibility() {
            if (similarsSlider.scrollLeft > 600) {
                document.getElementById('similars-slider-scrollLeftButton').style.display = "inline-block"
            }
            else {
                document.getElementById('similars-slider-scrollLeftButton').style.display = "none"
            }
            if (similarsSlider.scrollLeft < similarsSlider.scrollWidth - screen.width - 200) {
                document.getElementById('similars-slider-scrollRightButton').style.display = "inline-block"
            }
            else {
                document.getElementById('similars-slider-scrollRightButton').style.display = "none"
            }
        }
    </script>
    @*<script>
            function getAverageColor(imageElement, ratio) {
                const canvas = document.createElement("canvas");
                let height = (canvas.height = imageElement.naturalHeight);
                let width = (canvas.width = imageElement.naturalWidth);
                const context = canvas.getContext("2d");
                context.drawImage(imageElement, 0, 0);
                let data, length;
                let i = -4,
                    count = 0;

                try {
                    data = context.getImageData(0, 0, width, height);
                    length = data.data.length;
                } catch (err) {
                    console.error(err);
                    return {
                        R: 0,
                        B: 0,
                        G: 0
                    };
                }
                let R, G, B;
                R = G = B = 0;
                while ((i += ratio * 4) < length) {
                    ++count;
                    R += data.data[i];
                    G += data.data[i + 1];
                    B += data.data[i + 2];
                }
                R = ~~(R / count);
                G = ~~(G / count);
                B = ~~(B / count);
                return {
                    R,
                    G,
                    B
                };
            }
            const image = document.querySelector("#titleImage");
            image.crossOrigin = "Anonymous";
            image.onload = () => {
                const { R, G, B } = getAverageColor(image, 4);
                document.body.style.background = `rgb(${R}, ${G}, ${B}, 0.8)`;
            };
        </script>*@
}

